Index: Common/nav.php
===================================================================
--- Common/nav.php	(revision 1)
+++ Common/nav.php	(working copy)
@@ -5,6 +5,7 @@
     "/user/recommend" => '候选人',
     "/user/success" => '伙伴们',
     "/user/fail" => '备选库',
+    "/user/recomlist" => '推荐人',
     // "/project/all" =>  '所有项目',
     // "/project/ing" =>  '在资助项目',
     // "/partner" =>  '所有机构',
Index: Lib/Action/Frontend/StatAction.class.php
===================================================================
--- Lib/Action/Frontend/StatAction.class.php	(revision 2)
+++ Lib/Action/Frontend/StatAction.class.php	(working copy)
@@ -6,77 +6,123 @@
 
     //默认页面
     public function index() {
-
         $this->recommend();
-
     }
 
     //推荐人信息
     public function recommend() {
+        $filter_columns = $this->_getRecommendFilterColumns();
+        $filter = array();
+        foreach(array_keys($filter_columns) as $v) {
+            $value = trim(htmlspecialchars($this->_get($v)));
+            if(!$value) continue;
+            $filter["user_info." . $v] = array('like', '%'.$value.'%');
 
+        }
         //推荐人数量
-        $recommend_count = D("UserRecommends")->getRecommedCount();
+        $recommend_count = D("UserRecommends")->getRecommedCount($filter);
         $data['recommend_count'] = $recommend_count;
-        //候选人数量
-        $candidate_count = D("UserRecommends")->getCandidateCount();
+        //候选人数量,这里指的是满足条件的推荐人所推荐候选人的总数量
+        $candidate_count = D("UserRecommends")->getRecommendCandidateCount($filter);
         $data['candidate_count'] = $candidate_count;
         //按照性别排名
-        $recommend_gender_rank = D("UserRecommends")->getRecommendGenderRank();
+        $recommend_gender_rank = D("UserRecommends")->getRecommendGenderRank($filter);
         $data['recommend_gender_rank'] = $recommend_gender_rank;
         //按照推荐人推荐的数量排名
-        $recommend_num_rank = D("UserRecommends")->getRecommendNumRank();
+        $recommend_num_rank = D("UserRecommends")->getRecommendNumRank($filter);
         $data['recommend_num_rank'] = $recommend_num_rank;
+        $data['filter_columns'] = $filter_columns;
         $this->assign($data);
         $this->display("recommend");
 
     }
 
+    //推荐人和候选人字段略有不同，单独列出
+    private function _getRecommendFilterColumns() {
+         $columns = array(
+            "name" => array("display_name" => "姓名" , ),
+            "gender" => array("display_name" => "性别" , ),
+            "mobile" => array("display_name" => "联系电话" , ),
+            "org" => array("display_name" => "工作单位" , ),
+            "email" => array("display_name" => "联系邮件", ),
+            "address_province" => array("display_name" => "省份", ),
+        );
+
+        return $columns;
+    }
+
+
     //候选人信息
     public function candidate() {
+        $filter_columns = $this->_getFilterColumns();
+        $filter = array();
+        foreach(array_keys($filter_columns) as $v) {
+            $value = trim(htmlspecialchars($this->_get($v)));
+            if(!$value) continue;
+            $filter["user_recommends." . $v] = array('like', '%'.$value.'%');
 
+        }
         //候选人的数量
-        $candidate_count = D("UserRecommends")->getCandidateCount();
+        $candidate_count = D("UserRecommends")->getCandidateCount($filter);
         $data['candidate_count'] = $candidate_count;
         //候选人的地址
-        $candidate_province_rank = D("UserRecommends")->getCandidateProvinceRank();
+        $candidate_province_rank = D("UserRecommends")->getCandidateProvinceRank($filter);
         $data['candidate_province_rank'] = $candidate_province_rank;
         //候选人的性别，注意，此处候选人未通过之前没有性别信息，所以不统计
-        $candidate_gender_rank = D("UserRecommends")->getCandidateGenderRank();
+        $candidate_gender_rank = D("UserRecommends")->getCandidateGenderRank($filter);
         $data['candidate_gender_rank'] = $candidate_gender_rank;
         //候选人的年龄
-        $candidate_age_rank = D("UserRecommends")->getCandidateAgeRank();
+        $candidate_age_rank = D("UserRecommends")->getCandidateAgeRank($filter);
         $data['candidate_age_rank'] = $candidate_age_rank;
+        $data['filter_columns'] = $filter_columns;
         $this->assign($data);
         $this->display("candidate");
+    }
 
-
+    private function _getFilterColumns() {
+         $columns = array(
+            "name" => array("display_name" => "姓名" , ),
+            "mobile" => array("display_name" => "联系电话" , ),
+            "org" => array("display_name" => "工作单位" , ),
+            "email" => array("display_name" => "联系邮件", ),
+            "address_province" => array("display_name" => "省份", ),
+        );
+        return $columns;
     }
 
+
     //银杏伙伴
     public function partner() {
-        
+        $filter_columns = $this->_getFilterColumns();
+        $filter = array();
+        foreach(array_keys($filter_columns) as $v) {
+            $value = trim(htmlspecialchars($this->_get($v)));
+            if(!$value) continue;
+            $filter["user_recommends." . $v] = array('like', '%'.$value.'%');
+
+        }
         //银杏伙伴的数量
-        $partner_count = D("UserRecommends")->getPartnerCount();
+        $partner_count = D("UserRecommends")->getPartnerCount($filter);
         $data['partner_count'] = $partner_count;
         //银杏伙伴的地址
-        $partner_province_rank = D("UserRecommends")->getPartnerProvinceRank();
+        $partner_province_rank = D("UserRecommends")->getPartnerProvinceRank($filter);
         $data['partner_province_rank'] = $partner_province_rank;
         //银杏伙伴的性别
-        $partner_gender_rank = D("UserRecommends")->getPartnerGenderRank();
+        $partner_gender_rank = D("UserRecommends")->getPartnerGenderRank($filter);
         $data['partner_gender_rank'] = $partner_gender_rank;
+        $data['filter_columns'] = $filter_columns;
         $this->assign($data);
         $this->display("partner");
-        
     }
 
+
     //统计数据
     public function data() {
-
         $num_of_status = D("UserRecommends")->getNumOfAllStatus();
-        $data['num_of_status'] = $this->_silceByMax($num_of_status, 9);
+        $data['num_of_status'] = $this->_silceByMax($num_of_status, 9); 
+        $data['status_map'] = D("UserStatuses")->getAuditStatusNameIdMap();
         $this->assign($data);
         $this->display("data");
-
     }
 
 
@@ -83,10 +129,8 @@
 
     //传入一个数组，以及限制数量，返回截取后的数组
     private function _silceByMax($target, $max = 10) {
-
         //如果当前数量小于指定的最大数量，那么直接输出，否则切出最大数量个数
         return count($target) <= $max?$target:array_slice($target, 0, $max);
-
     }
 
 
Index: Lib/Action/Frontend/UserAction.class.php
===================================================================
--- Lib/Action/Frontend/UserAction.class.php	(revision 2)
+++ Lib/Action/Frontend/UserAction.class.php	(working copy)
@@ -41,9 +41,7 @@
      * 在用户提交申请表之前，准伙伴们的信息在user_recommends   status<60
      *                 之后，准伙伴们的信息在user_info表，状态分隔符：status>=60
      */
-    
     public function recommend() {
-
         $status = $this->data['status'];
         $filter['status'] = $status;
         $order = $this->_param("order");
@@ -53,9 +51,19 @@
         foreach(array_keys($this->data['recommend_columns']) as $v) {
             $value = trim(htmlspecialchars($this->_get($v)));
             if(!$value) continue;
-            $filter["user_recommends." . $v] = array('like', '%'.$value.'%');
+            //修复通过查询推荐人查询不到的问题，起初原因是查找的recommender_name字段，而字段并不存在
+            if ($v == "recommender_name") {
+                $value = D("UserInfo")->getIdByName($value);
+                $v = "recommend_user_id";
+            }
+            //因为recommend_user_id是int类型，所以不能用like来匹配
+            if ($v == "recommend_user_id") {
+                $filter["user_recommends." . $v] = array('eq', $value);
+            } else {
+                $filter["user_recommends." . $v] = array('like', '%'.$value.'%');
+            }
+
         }
-
         $count = D('UserRecommends')->getCount($filter);
         list($pagesize, $page_num, $this->pagestring) = pagestring($count, 20);
         $this->users = D('UserRecommends')->gets($filter, $page_num, $pagesize, $order);
@@ -68,9 +76,52 @@
         $this->display('index');
     }
 
+    //推荐人
+    private function _getRecommendFilterColumns() {
+         $columns = array(
+            "name" => array("display_name" => "姓名" , ),
+            "gender" => array("display_name" => "性别" , ),
+            "mobile" => array("display_name" => "联系电话" , ),
+            "org" => array("display_name" => "工作单位" , ),
+            "email" => array("display_name" => "联系邮件", ),
+            "address_province" => array("display_name" => "省份", ),
+        );
+        return $columns;
+    }
 
+
+    //推荐人列表
+    public function recomlist() {
+        $columns = $this->_getRecommendFilterColumns();
+        $this->columns = $columns;
+        $filter = array();
+        foreach(array_keys($columns) as $v) {
+            $value = trim(htmlspecialchars($this->_get($v)));
+            if(!$value) continue;
+            $filter["user_info." . $v] = array('like', '%'.$value.'%');
+        }
+        $count = D('UserRecommends')->getRecommedCount($filter);
+        list($pagesize, $page_num, $this->pagestring) = pagestring($count, 10);
+        $this->users = D('UserRecommends')->getRecommendInfos($filter, $page_num, $pagesize, $order);
+        $this->list_columns = $this->_getListColumns();
+        $this->display("recomlist");
+    }
+
+    private function _getListColumns() {
+         $columns = array(
+            "name" => array("display_name" => "姓名" , ),
+            "gender" => array("display_name" => "性别" , ),
+            "org" => array("display_name" => "工作单位" , ),
+            "duty" => array("display_name" => "职务" , ),
+            "work_from" => array("display_name" => "工作时间", ),
+            "mobile" => array("display_name" => "电话", ),
+            "email" => array("display_name" => "邮箱", ),
+        );
+
+        return $columns;
+    }
+
     public function index() {
-
         $filter = null;
         $status = $filter['status'] = intval($this->_get('status'));
         $order = $this->_param("order");
@@ -96,7 +147,6 @@
 
 
     public function todo() {
-
         $this->data['is_todo'] = 'Y';
 
         $filter['status'] = array('between','2,60');
@@ -158,7 +208,6 @@
 
     // 详情页
     public function detail() {
-
         $id = $this->_get('id');
         $this->user = D('UserRecommends')->getRecommend($id);
         $this->userinfo = $this->user['userinfo'];
Index: Lib/Model/CustomColumnsModel.class.php
===================================================================
--- Lib/Model/CustomColumnsModel.class.php	(revision 1)
+++ Lib/Model/CustomColumnsModel.class.php	(working copy)
@@ -192,6 +192,8 @@
             "org" => array("display_name" => "工作单位", "param" =>array("placeholder" => "",)),
             "mobile" => array("display_name" => "联系电话" , ),
             "email" => array("display_name" => "联系邮件", ),
+            //为了便于构建filter，增加了一个column，可以通过URL参数来查询省份，同时为了便于统计页面的超链接省份跳转
+            "address_province" => array("display_name" => "所在省份", ),
             "address" => array("display_name" => "所在地区", "type"=>"address", "li_class" => "fw", ),
         );
 
Index: Lib/Model/UserInfoModel.class.php
===================================================================
--- Lib/Model/UserInfoModel.class.php	(revision 2)
+++ Lib/Model/UserInfoModel.class.php	(working copy)
@@ -117,13 +117,17 @@
 
     //返回ID序列数组
     public function getIdMap() {
-
         //第二个参数为True返回所有值
         return $this->getField("id", true);
+    }
 
+    //通过姓名获取ID
+    public function getIdByName($name) {
+        $where['name'] = array("like",'%'.$name.'%');
+        $id = $this->where($where)->getField("id");
+        return $id;
     }
 
 
-
 }
 ?>
\ No newline at end of file
Index: Lib/Model/UserRecommendsModel.class.php
===================================================================
--- Lib/Model/UserRecommendsModel.class.php	(revision 2)
+++ Lib/Model/UserRecommendsModel.class.php	(working copy)
@@ -43,10 +43,10 @@
         return $count;
     }
 
+
     public function gets($filter, $page=0, $size=0, $order = null) {
 
         $filter = $this->_buildFilter($filter);
-        
         $user_obj = D("UserRecommends");
         if(!$order) {
             $order = 'update_time desc';
@@ -100,90 +100,88 @@
         //统计数组元素出现的次数
         $count_res = array_count_values($target);     
         //按数组的值降序排列
-        arsort($count_res);    
+        arsort($count_res);
         return $count_res;
 
     }
 
-    //得到被推荐人表中ID与推荐人ID对应关系，参数为是否包括银杏伙伴，默认不包括
-    private function _getRecommendIdMap($include_partner = false) {
 
-        //如果包括银杏伙伴
-        if ($include_partner) {
-            return $this->getField('id,recommend_user_id');
-        } else {
-            return $this->where("status < 99")->getField('id,recommend_user_id');
-        }
-
-    }
-
     //得到推荐人的所有去除重复后的ID数组
-    private function _getAllRecommedID() {
+    private function _getAllRecommedID($filter) {
 
         //初始化空数组，用来保存不重复的推荐人ID
         $recommend_id = array();
         //查找包括成为银杏伙伴的被推荐人
-        $id_map = $this->_getRecommendIdMap(true);
-        //得到UserInfo的ID,需要判定id_map中的ID是否有效
-        $user_info_id = D("UserInfo")->getIdMap();
-        foreach ($id_map as $key => $val) {
-            //$val代表推荐人的ID，如果该ID存在有效而且没有加入到recommend_id数组中,加之
-            if (in_array($val, $user_info_id) && !in_array($val, $recommend_id)) {
-                array_push($recommend_id, $val);
-            }
+        $filter_str = $this->_filterToString($filter);
+        $target = $this->query("SELECT distinct user_info.id
+                                FROM  `user_recommends` ,  `user_info`
+                                WHERE user_recommends.recommend_user_id = user_info.id" . $filter_str);
+        foreach ($target as $key => $val) {
+                array_push($recommend_id, $val['id']);
         }
         return $recommend_id;
-
     }
 
      //传入一个数组，以及限制数量，返回截取后的数组
     private function _silceByMax($target, $max = 10) {
-
         //如果当前数量小于指定的最大数量，那么直接输出，否则切出最大数量个数
         return count($target) <= $max?$target:array_slice($target, 0, $max);
-
     }
 
     //得到推荐人的数量，被推荐人成为银杏伙伴也要统计
-    public function getRecommedCount() {
-
-        $recommend_id = $this->_getAllRecommedID();
+    public function getRecommedCount($filter) {
+        $recommend_id = $this->_getAllRecommedID($filter);
         return count($recommend_id);
+    }
 
+    //得到推荐人的详细信息
+    public function getRecommendInfos($filter, $page=0, $size=0, $order = 'id asc') {
+        $user_obj = D("UserInfo");
+        $users = $user_obj->where($filter)->order($order);
+        if($page && $size) {
+            $users->page($page, $size);
+        }
+        $result = $users->select();
+        return $result;
+        // return $this->_rich($data, $rich);
     }
 
+    //这里指的是满足条件的推荐人所推荐候选人的总数量
+    public function getRecommendCandidateCount($filter) {
+        $filter_str = $this->_filterToString($filter);
+        $target = $this->query("SELECT distinct user_recommends.id
+                                FROM  `user_recommends` ,  `user_info`
+                                WHERE user_recommends.recommend_user_id = user_info.id" . $filter_str);
+        return count($target);
+    }
 
+
     //推荐人按照性别排名
-    public function getRecommendGenderRank() {
-
-        //去除重复后的推荐人ID
-        $recommend_id = $this->_getAllRecommedID();
+    public function getRecommendGenderRank($filter) {
+        $filter_str = $this->_filterToString($filter);
         //要统计的数组
-        $target = $this->table("user_recommends,user_info")->distinct(true)->where("user_recommends.recommend_user_id = 
-        user_info.id")->getField("user_info.id,gender",true);
+        $target = $this->table("user_recommends,user_info")->distinct(true)->where("user_recommends.recommend_user_id =
+            user_info.id" . $filter_str)->getField("user_info.id,gender",true);
         $rank_result = $this->_getSortRank($target);
         //如果不存在男或者女，则增补数量0
         if (!$rank_result['男']) {
             $rank_result['男'] = 0;
-        } 
+        }
         if (!$rank_result['女']) {
             $rank_result['女'] = 0;
         }
         return $rank_result;
-
     }
 
 
     //按照推荐人推荐的候选人数量排名
-    public function getRecommendNumRank() {
-
+    public function getRecommendNumRank($filter) {
+        $filter_str = $this->_filterToString($filter);
         $recommed_name = array();
         //要统计的数组
-        //$target = $this->table("user_recommends,user_info")->where("user_recommends.recommend_user_id = 
-        //user_info.id")->getField("user_info.name as name",true);
         $target = $this->query("SELECT user_info.name
-                                FROM  `user_recommends` ,  `user_info` 
-                                WHERE user_recommends.recommend_user_id = user_info.id");
+                                FROM  `user_recommends` ,  `user_info`
+                                WHERE user_recommends.recommend_user_id = user_info.id" . $filter_str);
         //取出name字段，然后变为一维数组
         foreach ($target as $val) {
             array_push($recommed_name, $val['name']);
@@ -191,55 +189,65 @@
         //按照出现的个数统计
         $rank_result = $this->_getSortRank($recommed_name);
         return $this->_silceByMax($rank_result);
-
     }
 
 
     //得到候选人的数量，不包括银杏伙伴,不管成功失败均统计
-    public function getCandidateCount() {
-
-        $result = $this->where('status<99')->select();
-        return count($result);
-
+    public function getCandidateCount($filter) {
+        $filter["user_recommends.status"] = array("lt", 99);
+        $result = $this->where($filter)->count();
+        return $result;
     }
 
 
     //候选人按照省份排名
-    public function getCandidateProvinceRank() {
-
+    public function getCandidateProvinceRank($filter) {
+        $filter["user_recommends.status"] = array("lt", 99);
         //要统计的数组
-        $target = $this->where("status<99")->getField("address_province",true);
+        $target = $this->where($filter)->getField("address_province",true);
         $rank_result = $this->_getSortRank($target);
         return $this->_silceByMax($rank_result);
+    }
 
+    //把filter转化为字符串，多表链接查询时构造sql语句，因为直接用thinkphp方法会出现一些问题
+    private function _filterToString($filter) {
+        $filter_items = array();
+        foreach ($filter as $key => $value) {
+            array_push($filter_items, "$key ".$value[0]." '".$value[1]."'");
+        }
+        $str = join(" and ",$filter_items);
+        //如果不为空，在前面加and
+        if ($str) {
+            $str = " and " . $str;
+        }
+        return $str;
     }
 
-
     //返回候选人的性别统计，没有成为合作伙伴
-    public function getCandidateGenderRank() {
-
+    public function getCandidateGenderRank($filter) {
+        $filter_str = $this->_filterToString($filter);
         //通过Invite_code来获得所有的候选人,两个表中invite_code一致且不为空，status小于99，即没有成为合作伙伴
-        $target = $this->table("user_recommends,user_info")->where("user_recommends.invite_code = 
-            user_info.invite_code and user_recommends.invite_code !='' and user_recommends.status < 99")->getField("gender",true);
+        $target = $this->table("user_recommends,user_info")->where("user_recommends.invite_code =
+            user_info.invite_code and user_recommends.invite_code !='' and user_recommends.status < 99 "
+            . $filter_str)->getField("gender",true);
         $rank_result = $this->_getSortRank($target);
         //如果不存在男或者女，则增补数量0
         if (!$rank_result['男']) {
             $rank_result['男'] = 0;
-        } 
+        }
         if (!$rank_result['女']) {
             $rank_result['女'] = 0;
         }
         return $rank_result;
-
     }
 
 
     //返回候选人的年龄统计，没有成为合作伙伴
-    public function getCandidateAgeRank() {
-
+    public function getCandidateAgeRank($filter) {
+        $filter_str = $this->_filterToString($filter);
         //通过Invite_code来获得所有的候选人,两个表中invite_code一致且不为空，status小于99，即没有成为合作伙伴
-        $target = $this->table("user_recommends,user_info")->where("user_recommends.invite_code = 
-            user_info.invite_code and user_recommends.invite_code !='' and user_recommends.status < 99")->getField("birthday",true);
+        $target = $this->table("user_recommends,user_info")->where("user_recommends.invite_code =
+            user_info.invite_code and user_recommends.invite_code !='' and user_recommends.status < 99" . $filter_str)->getField("birthday",true);
         $ages = array();
         foreach ($target as $val) {
             //echo intval(date("Y",time())) ."-" . intval(explode("-", $val)[0])."<br>";
@@ -246,58 +254,70 @@
             array_push($ages, intval(date("Y",time())) - intval(explode("-", $val)[0]));
         }
         $rank_result = $this->_getSortRank($ages);
-        return $this->_silceByMax($rank_result);
-
+        $age_seg = array("20-25" => 0,
+                        "26-30" => 0,
+                        "31-35" => 0,
+                        "36-40" => 0
+                        );
+        foreach ($ages as $age) {
+            if ($age >= 20 && $age <= 40) {
+                if ($age <= 25) {
+                    $age_seg['20-25'] += 1;
+                } else if ($age <= 30) {
+                    $age_seg['26-30'] += 1;
+                } else if ($age <= 35) {
+                    $age_seg['31-35'] += 1;
+                } else {
+                    $age_seg['36-40'] += 1;
+                }
+            }
+        }
+        return $age_seg;
     }
 
     //得到银杏伙伴的数量
-    public function getPartnerCount() {
-
-        $result = $this->where('status=99')->select();
+    public function getPartnerCount($filter) {
+        $filter["user_recommends.status"] = array("eq", 99);
+        $result = $this->where($filter)->select();
         return count($result);
-
     }
 
 
     //银杏伙伴按照省份排名
-    public function getPartnerProvinceRank() {
-
+    public function getPartnerProvinceRank($filter) {
+        $filter["user_recommends.status"] = array("eq", 99);
         //要统计的数组
-        $target = $this->where("status=99")->getField("address_province",true);
+        $target = $this->where($filter)->getField("address_province",true);
         $rank_result = $this->_getSortRank($target);
         return $this->_silceByMax($rank_result);
-
     }
 
 
+
     //银杏伙伴按照性别排名
-    public function getPartnerGenderRank() {
-
+    public function getPartnerGenderRank($filter) {
+        $filter_str = $this->_filterToString($filter);
         //通过Invite_code来获得所有的银杏伙伴其他信息
-        $target = $this->table("user_recommends,user_info")->where("user_recommends.invite_code = 
-            user_info.invite_code and user_recommends.invite_code !='' and user_recommends.status = 99")->getField("gender",true);
+        $target = $this->table("user_recommends,user_info")->where("user_recommends.invite_code =
+            user_info.invite_code and user_recommends.invite_code !='' and user_recommends.status = 99" . $filter_str)->getField("gender",true);
         $rank_result = $this->_getSortRank($target);
         //如果不存在男或者女，则增补数量0
         if (!$rank_result['男']) {
             $rank_result['男'] = 0;
-        } 
+        }
         if (!$rank_result['女']) {
             $rank_result['女'] = 0;
         }
         return $rank_result;
-
     }
 
     //统计数据通用方法，传入status获得人数
     private function _getNumByStatus($status) {
-
         return $this->where("status=".$status)->getField("count(*)");
-        
     }
 
     //统计所有类别的数据
     public function getNumOfAllStatus() {
-
         //保存状态和数量对应关系的数组
         $num_of_status = array();
         //获得各个状态及代号
@@ -311,21 +331,14 @@
         /*
         结果类似如下内容：
         array (size=11)
-          0 => 
+          0 =>
             array (size=1)
               '推荐表审核' => int 1
-          1 => 
+          1 =>
             array (size=1)
               '待背景调查' => int 2
 
         */
-
     }
-
-
-
-
-
-
 }
 ?>
\ No newline at end of file
Index: Lib/Model/UserStatusesModel.class.php
===================================================================
--- Lib/Model/UserStatusesModel.class.php	(revision 1)
+++ Lib/Model/UserStatusesModel.class.php	(working copy)
@@ -15,6 +15,10 @@
         return $this->where($f)->getField('id,name',true);
     }
     
+    //返回以各个状态名为键值，ID为键名的数组
+    public function getAuditStatusNameIdMap() {
+        return $this->getField('name,id',true);
+    }
 }
 
 ?>
\ No newline at end of file
Index: styles/css/main.css
===================================================================
--- styles/css/main.css	(revision 2)
+++ styles/css/main.css	(working copy)
@@ -335,7 +335,12 @@
 #content.project-detail ul.list_display .column_display_li .column_content {margin-left: 10px; line-height: 21px; padding-top: 7px;}
 #content.project-detail ul.list_display .three .column_content {width: 85%; line-height: 26px; padding-top: 6px;}
 #content.project-detail ul.list_display > li {padding-top:0;}
-
+#content .filter input[type="text"] {
+  height: 24px;
+  width: 150px;
+  margin-bottom: 0px;
+  margin-left: 5px;
+}
 .icon-map-marker {background: url(images/gmap.png) no-repeat;}
 
 table.stat {width:100%;}
@@ -395,4 +400,5 @@
 
 
 #content .embed_recommend {padding-left: 20px;}
-#content .embed_recommend h5.bg{font-size: 15px;}
\ No newline at end of file
+#content .embed_recommend h5.bg{font-size: 15px;}
+
Index: Tpl/Frontend/Stat/candidate.html
===================================================================
--- Tpl/Frontend/Stat/candidate.html	(revision 2)
+++ Tpl/Frontend/Stat/candidate.html	(working copy)
@@ -9,9 +9,15 @@
       <li><a href="/stat/partner">银杏伙伴</a></li>
       <li><a href="/stat/data">项目数据</a></li>
     </ul>
-
     <h5>候选人相关信息，包含了候选人数量，地区排名，年龄排名，性别比例</h5>
-
+    <form class="filter" action="/stat/candidate" method="get" style="margin: 20px 0">
+        <foreach name="filter_columns" item="one">
+            <input type="text" name="{$key}" placeholder="{$one['display_name']}">
+        </foreach>
+        <input type="submit" class="btn btn-small" value="筛选">
+        <a type="button" href="/stat/candidate" class="btn btn-small" >重置</a>
+    </form>
+    <!-- <h5>您可输入如上字段进行模糊查询筛选</h5> -->
     <table class="table table-striped table-hover home-tb">
       <tr>
         <td class="l">候选人数量：</td>
@@ -30,7 +36,7 @@
 
       <?php
             $column = array("候选人年龄","人数");
-            $stat_type_name='候选人年龄排名';
+            $stat_type_name='候选人年龄段统计';
             $key_stat_type_key = 'candidate-age-rank';
             $table_value = $candidate_age_rank;
         ?>
@@ -96,7 +102,7 @@
         xAxis: [{
             categories: {:json_encode(array_keys($candidate_province_rank))}
         }],
-        yAxis: [{ 
+        yAxis: [{
             labels: {
                 format: '{value}人',
                 style: {
@@ -129,7 +135,7 @@
         chart: {
             type: 'column'
         },
-        title: { text: '候选人人年龄统计' },
+        title: { text: '候选人人年龄段统计' },
         xAxis: [{
             categories: {:json_encode(array_keys($candidate_age_rank))}
         }],
Index: Tpl/Frontend/Stat/data.html
===================================================================
--- Tpl/Frontend/Stat/data.html	(revision 2)
+++ Tpl/Frontend/Stat/data.html	(working copy)
@@ -9,9 +9,7 @@
       <li><a href="/stat/partner">银杏伙伴</a></li>
       <li class="active"><a href="/stat/data">项目数据</a></li>
     </ul>
-    
-    <h5>推荐人相关信息，包含了推荐人数量，推荐的候选人数量，推荐数量的TOP排名</h5>
-
+    <h5>统计信息，包括了各个阶段的人数统计</h5>
     <table class="table table-striped table-hover home-tb">
         <foreach name="num_of_status" item="one">
             <if condition="($key%3 == 0)">
@@ -18,7 +16,7 @@
                 <tr>
             </if>
             <foreach name="one" item="num" key="status">
-                <td class="l">{$status}</td>
+                <td class="l"><a href="/user/recommend?status={$status_map[$status]}">{$status}</a></td>
                 <td class="r">{$num}</td>
             </foreach>
             <if condition="($key%3 == 3)">
Index: Tpl/Frontend/Stat/partner.html
===================================================================
--- Tpl/Frontend/Stat/partner.html	(revision 2)
+++ Tpl/Frontend/Stat/partner.html	(working copy)
@@ -9,10 +9,14 @@
       <li class="active"><a href="/stat/partner">银杏伙伴</a></li>
       <li><a href="/stat/data">项目数据</a></li>
     </ul>
-
-    
-
     <h5>银杏伙伴相关信息，包含了银杏伙伴数量，地区排名，性别比例</h5>
+    <form class="filter" action="/stat/partner" method="get" style="margin: 20px 0">
+        <foreach name="filter_columns" item="one">
+            <input type="text" name="{$key}" placeholder="{$one['display_name']}">
+        </foreach>
+        <input type="submit" class="btn btn-small" value="筛选">
+        <a type="button" href="/stat/partner" class="btn btn-small" >重置</a>
+    </form>
 
     <table class="table table-striped table-hover home-tb">
       <tr>
@@ -88,7 +92,7 @@
         xAxis: [{
             categories: {:json_encode(array_keys($partner_province_rank))}
         }],
-        yAxis: [{ 
+        yAxis: [{
             labels: {
                 format: '{value}个',
                 style: {
Index: Tpl/Frontend/Stat/recommend.html
===================================================================
--- Tpl/Frontend/Stat/recommend.html	(revision 2)
+++ Tpl/Frontend/Stat/recommend.html	(working copy)
@@ -9,20 +9,25 @@
       <li><a href="/stat/partner">银杏伙伴</a></li>
       <li><a href="/stat/data">项目数据</a></li>
     </ul>
-    
     <h5>推荐人相关信息，包含了推荐人数量，推荐的候选人数量，推荐数量的TOP排名</h5>
-
+     <form class="filter" action="/stat/recommend" method="get" style="margin: 20px 0">
+        <foreach name="filter_columns" item="one">
+            <input type="text" name="{$key}" placeholder="{$one['display_name']}">
+        </foreach>
+        <input type="submit" class="btn btn-small" value="筛选">
+        <a type="button" href="/stat/recommend" class="btn btn-small" >重置</a>
+    </form>
     <table class="table table-striped table-hover home-tb">
       <tr>
         <td class="l">推荐人总数：</td>
         <td class="r">{$recommend_count}</td>
-        <td class="l">候选人数量：</td>
+        <td class="l">候选人总数：</td>
         <td class="r">{$candidate_count}</td>
       </tr>
     </table>
-
+    <h5>注：候选人总数指满足筛选条件的推荐人推荐的候选人数量</h5>
     <table class="stat">
-      <?php 
+      <?php
             $column = array("推荐人性别","推荐人数");
             $stat_type_name = '推荐人性别比例';
             $key_stat_type_key = 'recommend-gender-rank';
Index: Tpl/Frontend/Stat/stat_block.html
===================================================================
--- Tpl/Frontend/Stat/stat_block.html	(revision 2)
+++ Tpl/Frontend/Stat/stat_block.html	(working copy)
@@ -10,8 +10,16 @@
         </thead>
         <foreach name="table_value" item="one">
           <tr>
-            <td>{$key}</td>
-            <td>{$one}</td>
+            <if condition = "$key_stat_type_key == 'recommend-num-rank'">
+                <td><a href="/user/recommend?recommender_name={$key}">{$key}</td>
+            <elseif condition = "$key_stat_type_key == 'candidate-province-rank'" />
+                <td><a href="/user/recommend?address_province={$key}">{$key}</td>
+            <elseif condition = "$key_stat_type_key == 'partner-province-rank'" />
+                <td><a href="/user/recommend?status=99&address_province={$key}">{$key}</td>
+            <else />
+                <td>{$key}</td>
+            </if>
+                <td>{$one}</td>
           </tr>
         </foreach>
     </table>
Index: Tpl/Frontend/User/recomlist.html
===================================================================
--- Tpl/Frontend/User/recomlist.html	(revision 0)
+++ Tpl/Frontend/User/recomlist.html	(working copy)
@@ -0,0 +1,31 @@
+<layout name="Public/frontend_template"/>
+
+<div id="content" class="wide">
+
+    <form method="get" action="/user/recomlist" class="view-filter">
+        <foreach name="columns" item="one">
+            <input type="text" placeholder="{$one['display_name']}" name="{$key}">
+        </foreach>
+        <button class="btn btn-small">{$Think.lang.search}</button>
+        <a class="btn btn-small" href="/user/recomlist">重置</a>
+    </form>
+    <!-- {$Think.get.tagid|display_tag_filter} -->
+    <table class="table table-striped table-hover">
+        <tr>
+            <foreach name="list_columns" item="one">
+                <th>{$one["display_name"]}</th>
+            </foreach>
+        </tr>
+        <foreach name="users" item="one">
+            <tr>
+                <foreach name="list_columns" item="item">
+                    <td>{$one[$key]}</td>
+                </foreach>
+            </tr>
+        </foreach>
+      </table>
+      <div class="text-right"><td colspan={:count($list_views)+3}>{$pagestring}</td></div>
+    </div>
+</div>
+
+
